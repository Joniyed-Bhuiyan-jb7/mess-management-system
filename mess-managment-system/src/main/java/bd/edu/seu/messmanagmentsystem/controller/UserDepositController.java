package bd.edu.seu.messmanagmentsystem.controller;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceAlreadyExistsException;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceNotExistException;import bd.edu.seu.messmanagmentsystem.model.UserDeposit;import bd.edu.seu.messmanagmentsystem.service.UserDepositService;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.List;@RestController@RequestMapping(value = "/api/v1/account")public class UserDepositController {    private UserDepositService userDepositService;    public UserDepositController(UserDepositService userDepositService) {        this.userDepositService = userDepositService;    }    @GetMapping    private ResponseEntity<List<String>> getAccountDetails(){        try {            List<UserDeposit> accountDetails = userDepositService.getAccountDetails();            List<String> acc = new ArrayList<>();            accountDetails.stream().forEach(a->{                acc.add("Name: "+a.getMember().getName()+                        " ID: "+a.getMember().getMember_id()+                        "   Amount:"+a.getDepositAmount()+                        " Date: "+a.getDate());            });            return ResponseEntity.ok().body(acc);        } catch (ResourceNotExistException e) {            return ResponseEntity.status(HttpStatus.NO_CONTENT).build();        }    }    @PostMapping    public ResponseEntity<String> addDeposite(@RequestBody UserDeposit accountDeposit){        try {            userDepositService.addDeposite(accountDeposit);            return ResponseEntity.ok().body("balance added....");        } catch (ResourceAlreadyExistsException e) {            return ResponseEntity.badRequest().body("invalid input....");        }    }}
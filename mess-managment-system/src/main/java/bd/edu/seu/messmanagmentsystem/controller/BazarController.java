package bd.edu.seu.messmanagmentsystem.controller;import bd.edu.seu.messmanagmentsystem.ModelForResponse.BazarDetails;import bd.edu.seu.messmanagmentsystem.ModelForResponse.BazarResponse;import bd.edu.seu.messmanagmentsystem.ModelForResponse.SaveBazar;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceAlreadyExistsException;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceNotExistException;import bd.edu.seu.messmanagmentsystem.model.Bazar;import bd.edu.seu.messmanagmentsystem.service.BazarService;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.List;@RestController@RequestMapping(value = "/api/v1/bazar")public class BazarController {    private BazarService bazarService;    public BazarController(BazarService bazarService) {        this.bazarService = bazarService;    }    @GetMapping("/{month}/{year}")    public ResponseEntity<List<BazarDetails>> getBazarList(@PathVariable int month,@PathVariable int year){        try {            return ResponseEntity.ok().body(bazarService.getBazarList(month,year));        } catch (ResourceNotExistException e) {            return ResponseEntity.notFound().build();        }    }    @PostMapping    public ResponseEntity<String> saveBazar(@RequestBody SaveBazar saveBazar){        try {            bazarService.saveBazar(saveBazar);            return ResponseEntity.ok().body("Bazar details saved....");        } catch (ResourceNotExistException e) {            return ResponseEntity.badRequest().body("Member not found...");        } catch (ResourceAlreadyExistsException e) {            return ResponseEntity.badRequest().body("Duplicate entry by bazar id..");        }    }    @GetMapping("/cost/{month}/{year}")    public ResponseEntity<BazarResponse> BazarCostForAMonth(@PathVariable int month, @PathVariable int year){        try {            return ResponseEntity.ok().body(bazarService.BazarCostForMonth(month,year));        } catch (ResourceNotExistException e) {            return ResponseEntity.badRequest().build();        }    }    @GetMapping("/{member_id}")    public ResponseEntity<List<BazarDetails>> getBazarListForSingleMember(@PathVariable long member_id){        try {            return ResponseEntity.ok().body(bazarService.getBazarListForSingleMember(member_id));        } catch (ResourceNotExistException e) {            return ResponseEntity.badRequest().build();        }    }}
package bd.edu.seu.messmanagmentsystem.repository;import bd.edu.seu.messmanagmentsystem.model.Meal;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.CrudRepository;import org.springframework.stereotype.Repository;import java.time.LocalDate;import java.util.List;@Repositorypublic interface MealRepository extends CrudRepository<Meal,Long> {    @Query(value = "select * from Meal where date=? and member_id=?",nativeQuery = true)    Meal findbyMember_idAndDate(LocalDate localDate,long member_id);    @Query(value = "SELECT (SUm(dinner)+SUM(launch)+SUM(breakfast)) FROM meal WHERE member_id=? and date BETWEEN ? AND ?",nativeQuery = true)    double findSumOfMeal(long member_id, LocalDate start, LocalDate end);    @Query(value = "SELECT * FROM meal where member_id=?",nativeQuery = true)    List<Meal> findAllByMember_id(long member_id);    @Query(value = "SELECT * FROM meal WHERE member_id=? AND DATE BETWEEN ? AND ?",nativeQuery = true)    public List<Meal> findByMemberAndMonth(long member_id,LocalDate start,LocalDate end);    @Query(value = "SELECT * FROM meal WHERE DATE BETWEEN ? AND ?",nativeQuery = true)    public List<Meal> findByMonth(LocalDate start,LocalDate end);    @Query(value = "SELECT (SUm(dinner)+SUM(launch)+SUM(breakfast)) FROM meal WHERE date BETWEEN ? AND ?",nativeQuery = true)    double totalMealForSingleMonth(LocalDate start, LocalDate end);}
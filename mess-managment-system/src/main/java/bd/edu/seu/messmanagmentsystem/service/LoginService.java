package bd.edu.seu.messmanagmentsystem.service;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceAlreadyExistsException;import bd.edu.seu.messmanagmentsystem.exceptions.ResourceNotExistException;import bd.edu.seu.messmanagmentsystem.model.Login;import bd.edu.seu.messmanagmentsystem.repository.LoginRepository;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class LoginService {    private LoginRepository loginRepository;    public LoginService(LoginRepository loginRepository) {        this.loginRepository = loginRepository;    }    public void saveUser(Login login) throws ResourceAlreadyExistsException {        if(!loginRepository.existsById(login.getUsername())){            loginRepository.save(login);        }else{            throw new ResourceAlreadyExistsException(login.getUsername());        }    }    public Login getUser(String id) throws ResourceNotExistException {        if(loginRepository.existsById(id)){            return loginRepository.findById(id).get();        }else{            throw new ResourceNotExistException(id);        }    }    public void UpdateUserNameorPass(String userName, Login login) throws ResourceNotExistException, ResourceAlreadyExistsException {        if(loginRepository.existsById(userName)){            if(!loginRepository.existsById(login.getUsername())){                loginRepository.deleteById(userName);                loginRepository.save(login);            }else{                throw new ResourceAlreadyExistsException(userName);            }        }else{            throw new ResourceNotExistException(userName);        }    }    public Login getUserNameByName(String name) throws ResourceNotExistException {        if(loginRepository.existsById(name)){            return loginRepository.getUserNameByName(name);        }else{            throw new ResourceNotExistException(name);        }    }    public List<String> getAll(){        return loginRepository.getAll();    }    public void updatePassword(String user,String pass) throws ResourceNotExistException {        if(loginRepository.existsById(user)){            loginRepository.updatePass(pass,user);        }else        {            throw new ResourceNotExistException(user);        }    }}